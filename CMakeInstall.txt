SET(CYCLES_INSTALL_DIR modules/unirender)
set(DEPENDENCY_GLEW_LIBRARY_BIN "./" CACHE STRING "")
pragma_install_create_directory(${CYCLES_INSTALL_DIR})
pragma_install_lib("${CMAKE_CURRENT_BINARY_DIR}/modules/pr_cycles/${PR_MODULE_INSTALL_SUBDIR}/${OS_LIB_BIN_PRE}pr_unirender${OS_LIB_BIN_EXT}" "${CYCLES_INSTALL_DIR}" OPTIONAL)
pragma_install_lib("${CMAKE_CURRENT_BINARY_DIR}/modules/pr_unirender/${PR_MODULE_INSTALL_SUBDIR}/${OS_LIB_BIN_PRE}pr_unirender${OS_LIB_BIN_EXT}" "${CYCLES_INSTALL_DIR}" OPTIONAL)
pragma_install_lib("${DEPENDENCY_OPENIMAGEDENOISE_LIBRARY}" "${CYCLES_INSTALL_DIR}" OPTIONAL)
pragma_install_lib("${DEPENDENCY_TBB_LIBRARY}" "${CYCLES_INSTALL_DIR}" OPTIONAL)
# pragma_install_lib("${DEPENDENCY_TIFF_LIBRARY}" "${CYCLES_INSTALL_DIR}" OPTIONAL)

# Install util_raytracing
pragma_install_lib("${DEPENDENCY_UTIL_RAYTRACING_LIBRARY}" "${BINARY_OUTPUT_DIR}" OPTIONAL)

# Install tbb
get_filename_component(PR_UNIRENDER_CYCLES_TBB_LIBRARY_PATH "${DEPENDENCY_CYCLES_TBB_LIBRARY}" DIRECTORY REALPATH)
pragma_install_lib_c("${PR_UNIRENDER_CYCLES_TBB_LIBRARY_PATH}/../bin/" "tbb" "${CYCLES_INSTALL_DIR}")

# Install OpenColorIO
if(WIN32)
    pragma_install_lib_c("${DEPENDENCY_OPENCOLORIO_LIBRARY}" "OpenColorIO_2_2" "${BINARY_OUTPUT_DIR}")
else()
    pragma_install_lib_c("${DEPENDENCY_OPENCOLORIO_LIBRARY}" "OpenColorIO" "${BINARY_OUTPUT_DIR}")
endif()

if(NOT ${DEPENDENCY_GLEW_LIBRARY_BIN} STREQUAL "")
	pragma_install_lib_c("${DEPENDENCY_GLEW_LIBRARY_BIN}" "glew32" "${CYCLES_INSTALL_DIR}" OPTIONAL)
endif()
pragma_install_lib_c("${DEPENDENCY_TBB_LIBRARY}" "tbbmalloc" "${CYCLES_INSTALL_DIR}" OPTIONAL)

# assets
pragma_install_directory("${CMAKE_CURRENT_LIST_DIR}/assets/" "modules/")

# render_raytracing tool
pragma_install_file("${CMAKE_CURRENT_BINARY_DIR}/tools/render_raytracing/${PR_MODULE_INSTALL_SUBDIR}/${OS_LIB_BIN_PRE}render_raytracing${OS_EXE_EXT}" "${BINARY_OUTPUT_DIR}" OPTIONAL)
pragma_install_lib("${CMAKE_CURRENT_BINARY_DIR}/tools/render_raytracing/external_libs/render_raytracing_lib/${PR_MODULE_INSTALL_SUBDIR}/${OS_LIB_BIN_PRE}render_raytracing_lib${OS_LIB_BIN_EXT}" "${BINARY_OUTPUT_DIR}" OPTIONAL)

# Cycles
pragma_install_lib("${CMAKE_CURRENT_BINARY_DIR}/modules/pr_unirender/external_libs/cycles/${PR_MODULE_INSTALL_SUBDIR}/${OS_LIB_BIN_PRE}UniRender_cycles${OS_LIB_BIN_EXT}" "${CYCLES_INSTALL_DIR}/cycles" OPTIONAL)
if(DEFINED DEPENDENCY_GLEW_LIBRARY_BIN AND NOT "${DEPENDENCY_CYCLES_BUILD_LOCATION}" STREQUAL "")
	pragma_install_directory("${DEPENDENCY_CYCLES_BUILD_LOCATION}/src/kernel/" "${CYCLES_INSTALL_DIR}/cycles/lib" FILES_MATCHING PATTERN "*.ptx" PATTERN "*.cubin" PATTERN "CMakeFiles" EXCLUDE PATTERN "cycles_kernel.dir" EXCLUDE PATTERN "osl" EXCLUDE PATTERN "x64" EXCLUDE)
endif()
if(DEFINED DEPENDENCY_GLEW_LIBRARY_BIN AND NOT "${DEPENDENCY_CYCLES_ROOT}" STREQUAL "")
	pragma_install_directory("${DEPENDENCY_CYCLES_ROOT}/src/kernel" "${CYCLES_INSTALL_DIR}/cycles/source")
	pragma_install_directory("${DEPENDENCY_CYCLES_ROOT}/src/util" "${CYCLES_INSTALL_DIR}/cycles/source")
endif()

pragma_install_lib_c("${DEPENDENCY_CYCLES_GLOG_LIBRARY}" "glog" "${CYCLES_INSTALL_DIR}/cycles")
pragma_install_lib_c("${DEPENDENCY_CYCLES_OPENVDB_LIBRARY_PATH}/../bin/" "openvdb" "${CYCLES_INSTALL_DIR}/cycles")
